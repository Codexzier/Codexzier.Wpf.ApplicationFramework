<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DefaultSetup.xaml" />
        <ResourceDictionary Source="Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="ComboBoxPathArrow" TargetType="Path">
                <Setter Property="Fill" Value="{StaticResource BrushMonochromaticSchemaB}" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Data" Value="M 0 0 L 4 4 L 8 0 Z" />
            </Style>

            <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                <Border x:Name="Border"
                        Background="{StaticResource BrushMonochromaticSchemaD}"
                        CornerRadius="0"
                        BorderBrush="{StaticResource BrushMonochromaticSchemaE}"
                        BorderThickness="1">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" BorderThickness="0 0 1 0" />
                        <Path x:Name="Arrow"
                              Style="{StaticResource ComboBoxPathArrow}"
                              Grid.Column="1" />
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource BrushMonochromaticSchemaD}" />
                        <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushMonochromaticSchemaE}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushMonochromaticSchemaA}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
                <Setter Property="Template" Value="{StaticResource ComboBoxToggleButton}" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="IsChecked"
                        Value="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter Property="ClickMode" Value="Press" />
            </Style>

            <ControlTemplate x:Key="ControlTemplateComboBoxTextBox" TargetType="{x:Type TextBox}">
                <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
            </ControlTemplate>

            <Style x:Key="ComboBoxContentPresenterTemplate" TargetType="ContentPresenter">
                <Setter Property="IsHitTestVisible" Value="False" />
                <Setter Property="Margin" Value="3,3,23,3" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>

            <Style x:Key="ComboBoxTextBoxTemplate" TargetType="TextBox" BasedOn="{x:Null}">
                <Setter Property="Template" Value="{StaticResource ControlTemplateComboBoxTextBox}" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="3,3,23,3" />
                <Setter Property="Focusable" Value="True" />
                <Setter Property="FontSize" Value="{StaticResource ControlElementButtonFontSize}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Visibility" Value="Hidden" />
            </Style>

            <Style x:Key="ComboBoxPopupTemplate" TargetType="Popup">
                <Setter Property="Placement" Value="Bottom" />
                <Setter Property="AllowsTransparency" Value="True" />
                <Setter Property="Focusable" Value="False" />
                <Setter Property="PopupAnimation" Value="Slide" />
            </Style>

            <Style x:Key="TextBlockBase" TargetType="TextBlock" BasedOn="{x:Null}">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="{StaticResource ControlElementButtonFontFamily}" />
                <Setter Property="FontSize" Value="{StaticResource ControlElementButtonFontSize}" />
                <Setter Property="Foreground" Value="{StaticResource BrushMonochromaticSchemaE}" />
            </Style>

            <Style x:Key="TextBlockTitleDescription" TargetType="TextBlock" BasedOn="{StaticResource TextBlockBase}">
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Margin" Value="2" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Height" Value="24" />
            </Style>

            <Style x:Key="TextBlockListBoxItem" TargetType="TextBlock" BasedOn="{StaticResource TextBlockTitleDescription}">
                <Style.Setters>
                    <Setter Property="FontWeight" Value="Normal" />
                    <Setter Property="Padding" Value="3" />
                    <Setter Property="Margin" Value="7 2 0 2" />
                </Style.Setters>
            </Style>

            <ControlTemplate x:Key="ComboBoxItemContentTemplate" TargetType="{x:Type ComboBox}">
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockListBoxItem}" />
                    </Grid.Resources>
                    <ToggleButton x:Name="ToggleButton"
                          Style="{StaticResource ComboBoxToggleButtonTemplate}"
                          Width="{TemplateBinding Property=Width}"
                          Height="{TemplateBinding Property=Height}" />
                    <ContentPresenter x:Name="ContentSite"
                              Margin="6 0 22 0"
                              Style="{StaticResource ComboBoxContentPresenterTemplate}"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />

                    <TextBox x:Name="PART_EditableTextBox"
                             Style="{StaticResource ComboBoxTextBoxTemplate}" />
                             <!--IsReadOnly="{TemplateBinding IsReadOnly}"--> 

                    <Popup x:Name="Popup"
                           Style="{StaticResource ComboBoxPopupTemplate}"
                           IsOpen="{TemplateBinding IsDropDownOpen}">

                        <Grid x:Name="DropDown"
                              SnapsToDevicePixels="True"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                            <Border x:Name="DropDownBorder"
                                    Background="{StaticResource BrushMonochromaticSchemaD}"
                                    BorderThickness="1"
                                    BorderBrush="{StaticResource BrushMonochromaticSchemaE}" />
                            <ScrollViewer Margin="1,6,2,6" SnapsToDevicePixels="True">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                            </ScrollViewer>
                        </Grid>
                    </Popup>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="HasItems" Value="false">
                        <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{StaticResource BrushMonochromaticSchemaB}" />
                    </Trigger>
                    <Trigger Property="IsGrouping" Value="true">
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                    </Trigger>
                    <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                        <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                    </Trigger>
                    <Trigger Property="IsEditable" Value="true">
                        <Setter Property="IsTabStop" Value="false" />
                        <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                        <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="ComboBoxItemTemplate" TargetType="ComboBoxItem">
                <Setter Property="Foreground" Value="{StaticResource BrushMonochromaticSchemaE}" />
                <Setter Property="FontSize" Value="{StaticResource ControlElementButtonFontSize}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBoxItem">
                            <Border x:Name="ContentBorder" 
                                    Background="{StaticResource BrushMonochromaticSchemaD}" 
                                    BorderThickness="3 0 0 0" 
                                    BorderBrush="{StaticResource BrushMonochromaticSchemaA}"
                                    HorizontalAlignment="Stretch">
                                <ContentPresenter Margin="5 2"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="ContentBorder" 
                                            Property="Background"
                                            Value="{StaticResource BrushMonochromaticSchemaD}" />
                                    <Setter TargetName="ContentBorder" 
                                            Property="BorderBrush"
                                            Value="{StaticResource BrushMonochromaticSchemaE}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ContentBorder" 
                                            Property="Background"
                                            Value="{StaticResource BrushMonochromaticSchemaA}" />
                                    <Setter TargetName="ContentBorder" 
                                            Property="BorderBrush"
                                            Value="{StaticResource BrushMonochromaticSchemaE}" />
                                    
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            

            <Style TargetType="ComboBox">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
                <Setter Property="MinHeight" Value="20" />
                <Setter Property="Height" Value="21" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Template" Value="{StaticResource ComboBoxItemContentTemplate}" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemTemplate}" />
                <Setter Property="Margin" Value="5 2" />
                <Setter Property="BorderBrush" Value="{StaticResource BrushMonochromaticSchemaE}" />
                <Setter Property="Background" Value="{StaticResource BrushMonochromaticSchemaD}" />
                <Setter Property="Foreground" Value="{StaticResource BrushMonochromaticSchemaC}" />
                
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Border>
                                <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" />
                            </Border>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <!--Color the default border when validation error occurs.-->
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="Validation.HasError" Value="true" />
                            <Condition Property="IsEnabled" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="BorderBrush" Value="{StaticResource BrushRed}" />
                    </MultiTrigger>

                    <!--Disable error-display when control is not enabled-->
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                    </Trigger>
                </Style.Triggers>
               
            </Style>
</ResourceDictionary>